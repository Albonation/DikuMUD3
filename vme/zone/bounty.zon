/*
filename    bounty
password    release
changedby   Sender
EmailAdd	chris.spanton@gmail.com
request     compile
version     1
END HEADER*/

#include <macros.h>

/* ================================================================== */
/*                                ZONE                                */
/* ================================================================== */
%zone bounty
lifespan 10
reset RESET_ANYHOW
title "Bounty Hunters Guild@Mainland"
creators {"sender"}

notes
"This is the guild of the bounty hunters. In version 1.0 we introduce some 
early implementations of gamification features taken from modern gaming. 
There is significant opportunity in the future to expand on this. 

Expanding rewards, new types of bounties, bonuses, loot boxes (game money 
not IRL money), adding a cost to bounties, teaching
skills / spells to aid in bounty hunting, etc are all on the table.

Leaderboards are also a significant part of the process, that is not yet 
implemented as of v1.0. There is some code in the zone to implement that, but
it seemed a messy and cumbersome implementation. I'll look to leverage existing 
competition zone infrastructure for future versions.

"

help
"The Guild of the Bounty Hunters is an ancient institution that has survived 
and indeed thrived on the outskirts of Midgaard. Wealthy patrons who need 
something handled, a back-door to men of law finding their mark, and any 
number of other needs have been brought before the bounty hunters."


/* ================================================================== */
/*                               DIL                                  */
/* ================================================================== */

%dil

// use wtime command on local server to hyperwarp time for testing.
// wtime 600 will zoom through 600 equivalent seconds, etc.

dilbegin make_bounty();
 
 var 
	item 	: unitptr;
	pc 		: unitptr;
	exdp   	: extraptr; 
	i 		: integer;
	targ	: unitptr;
	bty		: unitptr;
	arg 	: string;
	sdate   : string;
	smonth	: string;
	sltime	: stringlist;
	slmonth : stringlist;
	slfmonth : stringlist;
	dspl	: stringlist;
	blocked : stringlist;
	slextra : stringlist;
	estreak : extraptr;
	which   : string;
code
{
:init:

	heartbeat := PULSE_SEC;
	slmonth := {"Skip","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"};
	slfmonth := {"Skip","January","February","March","April","May","June","July","August","September","October","November","December"};
	blocked := {"basis","death","spells","skills","commands","baseget","basemove","wiz","baselook",
				"update","help","boards","comm","socials","set","mail","function","restrict","newbie",
				"justice","arena","competition","clan","holiday20","guild_quest","guild_paths",
				"assassin","clericguild","fightersguild","mageguild","necro_guild","offices","paladin_guild",
				"sorcerer","thievesguild","druid","knight","ranger","rebirth","barbarian","bounty"};

:start:

	wait(SFB_CMD, (activator.type == UNIT_ST_PC) and (command("say")) and 
		(("contract" == argument) or ("daily contract" == argument) or ("monthly contract" == argument)));
	
	arg := argument;
	pc := activator;
	secure(pc, start);
	
	if(pc.level < 50)
	{
		exec("Say You need to be at least level 50 to take contracts "+pc.name+"!", self);	
		goto start;
	}

	slextra := {""};
	sltime := split(asctime(realtime), " "); 
	i := 0;
	while(i <= 12)
	{
		if(slmonth.[i] == sltime.[1])
			break;
		i := i + 1;
	}
	sdate := sltime.[4] + "." + itoa(i) + "." + sltime.[2];
	smonth := sltime.[4] + "." + itoa(i);
	
	if(arg == "daily contract")
	{
		arg := "daily";
		goto this_bounty;
	}
	if(arg == "monthly contract")
	{
		arg := "monthly";
		goto this_bounty;
	}
	
	exec("Say So "+pc.name+" you'd like to see a contract.", self);	
	pause;
	
:which_bounty:
	
	exec("Say Would you like the daily or monthly?", self);	
	exec("Say You may also shake your head to decline.", self);
	wait(SFB_CMD, (activator.type == UNIT_ST_PC) and ((command("say")) and (("daily" in argument) or ("monthly" in argument))) or (command("shake")));
	
	if (command ("shake"))
		goto decline;
	
	arg := argument;
	pause;

:this_bounty:
	
	if (arg == "daily")
	{
		exdp := pc.extra.["$daily_target"];
		slextra.[0] := "$daily_target";
		which := arg;
	}
	else if (arg == "monthly")
	{
		sdate := smonth;
		exdp := pc.extra.["$monthly_target"];
		slextra.[0] := "$monthly_target";
		which := arg;
	}
	else
		goto which_bounty;
	
:give_bounty:

	if(exdp != null)
	{
		dspl := split(exdp.descr, "|");
		if (dspl.[0] == sdate)
			goto have_bounty;
		if(not("DONE" in dspl))	
		{
			estreak := pc.extra.["$"+which+"_streak"];
			if (estreak != null)
			{
				if (atoi(estreak.descr) > 1)
					exec("say Ha! It seems your streak has come to an end. You had closed "+estreak.descr+" "+which+" bounties in a row!",self);
				else
					exec("say Well, you weren't able to close that last "+which+" contract.",self);
				subextra(pc.extra, "$"+which+"_streak");
			}
		}
		subextra(pc.extra, "$"+which+"_target");
	}
:new_target:
	targ := findrndunit(pc,FIND_UNIT_WORLD,UNIT_ST_NPC);
	if (targ.zoneidx in blocked)
		goto new_target;
	if (((targ.race > RACE_CNIDARIA_MIN) and (targ.race <= RACE_CNIDARIA_MAX)) or
       ((targ.race > RACE_PLANT_MIN) and (targ.race <= RACE_PLANT_MAX)))
		goto new_target;
	addextra (pc.extra,slextra,sdate + "|" + targ.symname + "|" + targ.title);
	// addextra(pc.quests,{which+" Bounty Ongoing "+$date,"");
	// maybe do the above? How to help players know whats ongoing etc?
	exec("Say Here you go "+pc.name+", a "+which+" contract.", self);	
	bty := load("contract@bounty");
	if(which == "monthly")
		which := slfmonth.[i];
	bty.extra.[0].descr := bty.extra.[0].descr + 
		"<br><div class='cpw'>Contract Date: </div><div class='cr'>" + sdate +
		"<br><div class='cpw'>Contract Term: </div><div class='cr'>" + which +
		"<br><div class='cpw'>Target Name: </div><div class='cr'>" + targ.name + 
		"<br><div class='cpw'>Target Alias: </div><div class='cr'>" + targ.title + 
		"<br><div class='cpw'>Target Description: </div><div class='cr'> " + targ.outside_descr;

    addextra (bty.extra,{"$symname"},targ.symname);
    addextra (bty.extra,{"$player"},pc.name);
    addextra (bty.extra,{"$date"},sdate);
	link(bty,pc);
	act ("$2n quietly slips you a contract.", A_SOMEONE, pc, self, null, TO_CHAR);
	act ("$2n quietly slips $1n something.", A_SOMEONE, pc, self, null, TO_REST);
	goto the_end;
	
:have_bounty:
	// maybe we should allow multiples?
	// check to see if the first is done. 
	// how do we allow cancellation if you cant complete?
	exec("say Bugger off! You've already taken a "+which+" contract.",self);
	goto the_end;
	
:decline:
	heartbeat := PULSE_SEC/4;
	pause;
	exec("Say Very well then.", self);
:the_end:
	unsecure(pc);
	goto start;

}
dilend

dilbegin claim_bounty();
var 
	pc 		: unitptr;
	med 	: unitptr;
	edaily 	: extraptr;
	emonth  : extraptr;
	estreak : extraptr;
	etotal 	: extraptr;
	emax    : extraptr;
	smtarg	: string;
	sdtarg	: string;
	sdone	: string;
	sdate   : string;
	etarg 	: extraptr;
	slmonth : stringlist;
	sldt	: stringlist;
	slmt	: stringlist;
	slstr   : stringlist;
	sltot   : stringlist;
	slnew	: stringlist;
	sltime  : stringlist;
	i   	: integer;
	targ    : unitptr;
	rwrd    : integer;
code
{
:init:

	slmonth := {"Skip","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"};

:start:

	on_activation((self.position == POSITION_FIGHTING), skip);
	wait(SFB_DONE, command("give") and (target == self));
	
	pc := activator;
	med := medium;
	secure(pc, labsecure);
	
	slnew := {""};
	substring (slnew,"");
	
	if((self.inside.symname != "head@death") and (self.inside.symname == med.symname))
	{
		exec("say What would I do with this, "+pc.name+"?",self);
		exec("give "+self.inside.name+" "+pc.name,self);
		goto start;
	}
	
	edaily := pc.extra.["$daily_target"];
	emonth := pc.extra.["$monthly_target"];
	sldt := split(edaily.descr,"|");
	slmt := split(emonth.descr,"|");
	sdtarg := sldt.[2];
	smtarg := slmt.[2];
	sltime := split(asctime(realtime), " ");
	i := 0;
	while(i <= 12)
	{
		if(slmonth.[i] == sltime.[1])
			break;
		i := i + 1;
	}
	// if you have turned in a valid bounty
	
	if("The decapitated head of "+sdtarg+" is laying here." == self.inside.outside_descr)
	{
		etarg := edaily;
		emax := pc.extra.["$daily_max"];
		estreak := pc.extra.["$daily_streak"];
		etotal := pc.extra.["$daily_total"];
		sdone := "daily"; 
		sdate := sltime.[4] + "." + itoa(i) + "." + sltime.[2];
		
		if (estreak == null)
		{
			addextra (pc.extra,{"$daily_streak"},"0");
			estreak := pc.extra.["$daily_streak"];
		}
		if (etotal == null)
		{
			addextra (pc.extra,{"$daily_total"},"0");
			etotal := pc.extra.["$daily_total"];
		}
		if (emax == null)
		{
			addextra (pc.extra,{"$daily_max"},"0");
			emax := pc.extra.["$daily_max"];
		}
	}
	else if ("The decapitated head of "+smtarg+" is laying here." == self.inside.outside_descr)
	{
		etarg := emonth;
		emax := pc.extra.["$monthly_max"];
		estreak := pc.extra.["$monthly_streak"];
		etotal := pc.extra.["$monthly_total"];
		sdone := "monthly";
		sdate := sltime.[4] + "." + itoa(i);

		if (estreak == null)
		{
			addextra (pc.extra,{"$monthly_streak"},"0");
			estreak := pc.extra.["$monthly_streak"];
		}
		if (etotal == null)
		{
			addextra (pc.extra,{"$monthly_total"},"0");
			etotal := pc.extra.["$monthly_total"];
		}
		if (emax == null)
		{
			addextra (pc.extra,{"$monthly_max"},"0");
			emax := pc.extra.["$monthly_max"];
		}
	}
	else
	{
		exec("cackle",self);
		exec("say Kill happy arent we "+pc.name+"? This wasn't your target.",self);
		exec("give "+self.inside.name+" "+pc.name,self);
		goto labsecure;
	}
	
	
		slstr := split(etarg.descr, "|");
		if("DONE" in slstr)
			goto already_done;
		
		if (slstr.[0] != sdate)
			goto already_done;
		
	
	// increment pointers as necessary
	
	estreak.descr := itoa(atoi(estreak.descr) + 1);
	etotal.descr := itoa(atoi(etotal.descr) + 1);
	etarg.descr := etarg.descr + "|DONE";
	if(atoi(estreak.descr) > atoi(emax.descr))
		emax.descr := estreak.descr;
	
	
	
	/*

This code is for creating the signs and tracking leaders. 
It is all based on extras on the PC's, so we can capture
data for now until we're ready to implement.

I think we should probably ditch this system entirely, and
leverage the competition boards. Will investigate.

	targ := findsymbolic("day_sign@bounty");
	if (targ.extra.[0].descr == "")
	{
		sendtext("freshies - add "+pc.name,pc);
		addstring(slnew, pc.name);
		addstring(slnew, estreak.descr);
		goto freshies;
	}
	slstr := split(replace("<br>"," - ",targ.extra.[0].descr)," - ");
	substring (slstr,"");
	i := 0;
	while(i < length(slstr))
	{
		sendtext("i == "+itoa(i)+" lenght == "+ itoa(length(slstr)),pc);
		if(atoi(estreak.descr) > atoi(slstr.[i+1]))
		{
			sendtext("greater - add "+pc.name,pc);
			addstring(slnew, pc.name);
			addstring(slnew, estreak.descr);
			if (pc.name != slstr.[i])
			{
				sendtext("great and not equal - add "+slstr.[i],pc);
				addstring(slnew, slstr.[i]);
				addstring(slnew, slstr.[i+1]);
			}
		}		
		else if(atoi(estreak.descr) <= atoi(slstr.[i+1]))
		{
			sendtext("less or equal - add "+slstr.[i],pc);
			addstring(slnew, slstr.[i]);
			addstring(slnew, slstr.[i+1]);
			
			// just added this - testing
			// trying to handle scenarios where the board isnt full and if
			// have less than someone else
			//addstring(slnew, pc.name);
			//addstring(slnew, estreak.descr);
		}
		if (i == 18)
			break;
		i := i + 2;
	}
:freshies:
	i := 0;
	targ.extra.[0].descr := "";
	sendtext("i == "+itoa(i)+" length == "+ itoa(length(slnew)),pc);
	while (i <= length(slnew)-2)
	{
		sendtext("i == "+itoa(i)+" length == "+ itoa(length(slnew)),pc);
		sendtext("writing slnew: "+slnew.[i],pc);
		targ.extra.[0].descr := targ.extra.[0].descr + slnew.[i];
		targ.extra.[0].descr := targ.extra.[0].descr + " - ";
		targ.extra.[0].descr := targ.extra.[0].descr + slnew.[i+1];
		targ.extra.[0].descr := targ.extra.[0].descr + "<br>";
		i := i + 2;
	}
	
	*/
	
	
	destroy(self.inside);
	exec("say It appears we can consider your "+sdone+" contract closed.",self);
	exec("grin",self);
	
	// The reward section //
	
	exec("say Your streak is now at "+estreak.descr+". Here is the commission "+pc.name+".",self);
	
	// set streak length
	i := atoi(estreak.descr);
	if(sdone == "daily")
	{
		// base value in XP.
		// cash reward will be iron = xp value / 2
		rwrd := 1000;
		if (i < 7)
			rwrd := (rwrd * i) + 5000;
		else if (i < 10)
			rwrd := 15000;
		else if (i < 100)
			rwrd := rwrd * (i * (3/2));
		else if (i < 200)
			rwrd := rwrd * (i * 2);
		else if (i < 300)
			rwrd := rwrd * (i * 3);
		else if (i >= 300)
			rwrd := rwrd * (i * 4);
	}
	else if (sdone == "monthly")
	{
		// base value in XP.
		// cash reward will be iron = xp value / 2
		rwrd := 10000;
		if (i < 3)
			rwrd := rwrd * (i * (3/2));
		else if (i < 10)
			rwrd := rwrd * (i * 2);
		else if (i < 15)
			rwrd := rwrd * (i * 3);
		else if (i >= 20)
			rwrd := rwrd * (i * 4);
	}
	
	act("<br>$2n hands you some coins.",A_SOMEONE, pc, self, null, TO_CHAR);
	i := transfermoney(null,pc,(rwrd/2));	
	experience(rwrd, pc);
	act("<br><div class='hint'>Contract Completed!</div>",A_ALWAYS, pc, null, null, TO_CHAR); 
	act("<div class='xpgain'>You recieve "+itoa(rwrd)+" experience.</div>",A_ALWAYS, pc, null, null, TO_CHAR); 
	goto labsecure;
	// End reward section // 
	
:already_done:

	if (atoi(estreak.descr) > 1)
		exec("say This contract has already closed! It seems your streak of "+estreak.descr+" "+sdone+" contracts has come to an end.",self);
	else
		exec("say Your first contract in the streak, and it had already closed!",self);
	subextra(pc.extra, "$"+sdone+"_streak");
	
:labsecure:

	unsecure(pc);	
	goto start;
}
dilend		


%rooms

entry_room
names {"contracts"}
title "<div class='cpn'>Entrance to Bounty Hunters Guild</div>"
descr
"Stepping out from bustle of Kings Road, the entrance to the Bounty Hunters Guild 
is a distinct change of environment. The large stone building extends high into the air 
and has a commanding presence. Tall trees provide ample shade during the bright days, 
and plenty of routes to approach... quietly. It seems that there has been significant wealth brought to 
the guild over many generations. A large set of double-doors extend into the darkness."

movement SECT_CITY
flags {UNIT_FL_NO_MOB}
ALWAYS_LIGHT

north to bounty_1;
south to kingroad5@ratswarf;

end

bounty_1
title "Inside the Guild"
descr
"Through the large double-doors the quiet of this space encompasses you. While the building 
is largely unadorned and simple rough-hewn stone. The sheer size and scale of the place speak 
to the significant investments that have been made over many years. Back to the south the 
outdoors and access to Kings Road can be seen in the distance."
flags {UNIT_FL_INDOORS}
movement SECT_CITY
ALWAYS_LIGHT

south to entry_room;

end

%mobiles

hunter
names {"bounty hunter","hunter","man"}    
title "the bounty hunter"        
descr "A tall man with a dark smirk stands in the shadows."
extra{}
"Tall and well muscled, he is of unknown origin. An dark smirk seems to permanently rest on his face. This 
appears to be the man who may offer a contract if you but ask." 

alignment -1000
M_AVG_HUMAN(100,SEX_MALE)
position POSITION_STANDING 

dilcopy make_bounty@bounty();
dilcopy claim_bounty();

end 

%objects

contract
names {"contract"}
title "a contract"
descr "A crisp paper is here."
extra {}
"<div class='cr'>REWARD!!</div><br>"
manipulate {MANIPULATE_TAKE}
cost 1 IRON_PIECE
end

// longest streaks
assn_plaque
names {"top assassin plaque","top assassin","plaque","1"}
title "the top assassins plaque"
descr "A <a cmd='read #'>top assassin plaque</a> is here."
weight 1
cost 1 IRON_PIECE
extra {}
""
end
//  longest active monthly streak
mnth_sign
names {"monthly assassin sign","monthly assassin","sign","2"}
title "the monthly assassins sign"
descr "An active <a cmd='read #'>monthly assassin sign</a> is here."
weight 1
cost 1 IRON_PIECE
extra {}
""
end
// longest active daily streak
day_sign
names {"daily assassin sign","daily assassin","sign","3"}
title "the daily assassins sign"
descr "An active <a cmd='read #'>daily assassin sign</a> is here."
weight 1
cost 1 IRON_PIECE
extra {}
""
end

//most total dailies
tday_board
names {"total daily assassin board","total assassin","board","4"}
title "the total daily assassins board"
descr "A <a cmd='read #'>total assassin board</a> is here."
weight 1
cost 1 IRON_PIECE
extra {}
""
end
// most total monthlies
tmonth_board
names {"total monthly assassin board","total monthly","board"}
title "the total monthly assassins board"
descr "A <a cmd='read #'>total monthly board</a> is here."
weight 1
cost 1 IRON_PIECE
extra {}
""
end

%reset
load hunter into bounty_1 max 1

%end
