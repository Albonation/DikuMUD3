/*
filename    bounty
password    release
changedby   Sender
EmailAdd	chris.spanton@gmail.com
request     compile
version     1
END HEADER*/

#include <macros.h>

#define JOIN_ONGOING "Becoming a Bounty Hunter"
#define JOIN_COMPLETE "Bounty Hunter"

/* ================================================================== */
/*                                ZONE                                */
/* ================================================================== */
%zone bounty
lifespan 10
reset RESET_ANYHOW
title "Bounty Hunters Guild@Mainland"
creators {"sender"}

notes
"This is the guild of the bounty hunters. In version 1.0 we introduce some 
early implementations of gamification features taken from modern gaming. 
There is significant opportunity in the future to expand on this. 

Expanding rewards, new types of bounties, bonuses, loot boxes (game money 
not IRL money), adding a cost to bounties, teaching
skills / spells to aid in bounty hunting, etc are all on the table.

Leaderboards are also a significant part of the process, that is not yet 
implemented as of v1.0. There is some code in the zone to implement that, but
it seemed a messy and cumbersome implementation. I'll look to leverage existing 
competition zone infrastructure for future versions.

///////////////////////////////
get 30 daily bounty streak
talk to bounty hunter, accept question
pray to enter sanctum, feast
talk to the guide. Get ability to feast.
talk to the historian. 
talk to the blacksmith. 
	do quest?
	Get ability to list arms/armors.
talk to the jeweler. 
	do quest?
	Get ability to buy list jewely.
talk to the historian. 
	Historian will clarify ask for playing spy on Al Kazeem. (maybe captain)?
Talk to Al Kazeem
	Either choose to betray the bounty hunters, by alerting targets

// spree - how does it fit in the story?
// who gives it? Who rewards it?


"

help
"The Guild of the Bounty Hunters is an ancient institution that has survived 
and indeed thrived on the outskirts of Midgaard. Wealthy patrons who need 
something handled, a back-door to men of law finding their mark, and any 
number of other needs have been brought before the bounty hunters."

/* ================================================================== */
/*                               DIL                                  */
/* ================================================================== */

%dil

dilbegin tablet();
var
	pc : unitptr;
	slt : stringlist;
	bty : extraptr;
	targ : unitptr;
	sdate : string;
	buf : string;
	which : string;
	slbty : stringlist;
	i : integer;
	cstat : string;
code
{
	slbty := {"$daily_target","$monthly_target","$bonus_target"};
:start:
	
	wait(SFB_DONE,command("look") and ((argument == "bounty hunters tablet") or (argument == "tablet")) and (activator == self.outside));
	
	pc := activator;
	secure(pc,lostpc);
	
	block;
	buf := "<div class='cr'>REWARD!!</div><br><br>";
	i := 0;
	
	while (i < length(slbty))
	{
		bty := slbty.[i] in pc.extra;
		if (bty)
		{
			slt := split(bty.descr,"|");
			if("DONE" in slt) 
				cstat := "Closed";
			else
				cstat := "Open";
			which := replace("$","",slbty.[i]);
			which := replace("_target","",which);
			targ := findsymbolic(slt.[1]);
			sdate := slt.[0];
			buf := buf + 
			"<div class='cr'>-------------------------------------------------------</div>" +
			"<br><div class='cpw'>Contract Date: </div><div class='cr'>" + sdate +
			"<br><div class='cpw'>Contract Term: </div><div class='cr'>" + which +
			"<br><div class='cpw'>Target Name: </div><div class='cr'>" + targ.name + 
			"<br><div class='cpw'>Target Alias: </div><div class='cr'>" + targ.title + 
			"<br><div class='cpw'>Target Description: </div><div class='cr'> " + targ.outside_descr +
			"<br><div class='cpw'>Contract Status: </div><div class='cr'> " + cstat +
			"<br>-------------------------------------------------------</div><br><br>";
		}
		i := i + 1;
	}
	
	act (buf, A_ALWAYS, pc, null, null, TO_CHAR);
	
:lostpc:

	unsecure(pc);
	goto start;
	
}
dilend

dilbegin reprint(pc:unitptr, buf:string, which:string);
var
	slt : stringlist;
	bty : unitptr;
	targ : unitptr;
	sdate : string;
code
{
	log("Reprint called for "+which+" contract: "+buf);
	slt := split(buf,"|");
	targ := findsymbolic(slt.[1]);
	sdate := slt.[0];
	bty := load("contract@bounty");
	bty.extra.[0].descr := bty.extra.[0].descr + 
	"<br><div class='cpw'>Contract Date: </div><div class='cr'>" + sdate +
	"<br><div class='cpw'>Contract Term: </div><div class='cr'>" + which +
	"<br><div class='cpw'>Target Name: </div><div class='cr'>" + targ.name + 
	"<br><div class='cpw'>Target Alias: </div><div class='cr'>" + targ.title + 
	"<br><div class='cpw'>Target Description: </div><div class='cr'> " + targ.outside_descr;
	link(bty,pc);
	return;
}
dilend

dilbegin status();
external
	reprint@bounty(pc:unitptr, buf:string, which:string);
var
	pc 		: unitptr;
	daily	: extraptr;
	monthly : extraptr;
	bonus 	: extraptr;
	i		: integer;
	j 		: integer;
	k 		: integer;
	arg		: string;
	bty 	: unitptr;
	targ 	: unitptr;
	slt		: stringlist;
	sm,sd,sb : string;
code
{
	heartbeat:= PULSE_SEC;

:start:

	wait(SFB_CMD,command("say") and ("contract status" == argument));

	pc := activator;
	secure(pc,donezo);
	
	daily := "$daily_target" in pc.extra;
	monthly := "$monthly_target" in pc.extra;
	bonus := "$bonus_target" in pc.extra;
	
	i := 0;
	j := 0;
	k := 0;
	
	if(daily != null)
	{
		sd := daily.descr;
		i := i + 1;
		if("DONE" in sd)
			j := j + 1;
		else
			k := k + 1;
	}
	if(monthly != null)
	{
		sm := monthly.descr;
		i := i + 1;
		if("DONE" in sm)
			j := j + 1;
		else
			k := k + 1;
	}
	if(bonus != null)
	{
		sb := bonus.descr;
		i := i + 1;
		if("DONE" in sb)
			j := j + 1;
		else
			k := k + 1;
	}
	pause;
	exec("say You currently have "+itoa(i)+" contracts.",self);
	if(k > 0)
		exec("say Of those, you have "+itoa(k)+" open, and "+itoa(j)+" closed.",self);
	else 
	{
		exec("say You have closed all of your contracts.",self);
		goto start;
	}
	
:try_again:
	pause;
	exec("say Would you like details on your open contracts?",self);
	exec("say Nod for yes, or shake for no.",self);

	wait(SFB_CMD,(pc == activator));
	if (command("nod"))
		goto sure_thing; 
	else if (command("shake"))
		goto donezo;
	else
		goto try_again;
	
:sure_thing:

	if(k > 0)
	{
		pause;
		exec("say Here's what you have open, "+pc.name+".",self);
		if((sb != null) and (not("DONE" in sb)))
			reprint(pc,sb,"bonus");
		if((sd != null) and (not("DONE" in sd)))
			reprint(pc,sd,"daily");
		if((sm != null) and (not("DONE" in sm)))
			reprint(pc,sm,"monthly");
		
		if(k == 1)
		{
			act ("$2n quietly slips you a contract.", A_SOMEONE, pc, self, null, TO_CHAR);
			act ("$2n quietly slips $1n something.", A_SOMEONE, pc, self, null, TO_REST);
		}
		else
		{
			act ("$2n quietly slips you your contracts.", A_SOMEONE, pc, self, null, TO_CHAR);
			act ("$2n quietly slips $1n something.", A_SOMEONE, pc, self, null, TO_REST);
		}
	}

:donezo:
	unsecure(pc);
	goto start;
}
dilend

dilbegin join();
var
  pc: unitptr;
  exdp: extraptr;

code
{
	heartbeat:= PULSE_SEC*4;

:start:
	wait(SFB_CMD,(activator.type == UNIT_ST_PC) and (not(JOIN_ONGOING in activator.quests)) and (not(JOIN_COMPLETE in activator.quests)) and (activator.position == POSITION_STANDING));

	
	pc := activator;
	secure(pc, lostpc);
	exdp := "$daily_max" in pc.extra;
	if((atoi(exdp.descr) < 30) or (exdp == null))
		goto start;
	
    pause;
	exec("hmm",self);
	pause;
    exec("say Perhaps, you could be worthy.", self);
    pause;
	exec("say It is no small feat to close 30 consecutive daily contracts.", self);
	pause;
	exec("say It shows a certain commitment to our way.", self);
	pause;
	exec("say For a hundred generations we've filled this role.", self);
	pause;
	exec("say There have been times of harship, but the guild has maintained an unbroken line.", self);
	pause;
	exec("emote looks at you long and hard.", self);
	pause;
	exec("say I wonder.", self);
	pause;
	exec("say Do you think yourself up to the task of joining our ranks?", self);

:accept_rogue:

	wait(SFB_CMD, activator == pc);
	if (command("nod"))
		goto rogue_accepted; 
	else if (command("shake"))
		goto no_quest;
	else
	{
		exec("say Nod your head if you think yourself up to the challenge.", self);
		goto accept_rogue;
	}

:no_quest:

	exec("say So be it!", self);
	unsecure(pc);
	goto start;

:rogue_accepted:

	pause;
	exec("say The journey will be long and challenging.", self);
	pause;
	exec("say You will have to prove yourself time and again to the guild.", self);
	pause;
	exec("say I can't tell you much more, only that this way of life will change you.", self);
	pause;
	exec("say Go now, and pray at the Hunters Shrine.", self);
	addextra(pc.quests, {JOIN_ONGOING}, "");

	unsecure(pc);
	goto start;	
:lostpc:

	goto start;
}
dilend // END join


dilbegin pray();
var
  pc : unitptr;
  exdp : extraptr;
  tt : integer;

code
{
	heartbeat:= PULSE_SEC*4;

:start:
	wait(SFB_CMD, command("pray") and ((JOIN_ONGOING in activator.quests) or (JOIN_COMPLETE in activator.quests)));
	
	block;
	pc := activator;
	secure(pc,lostpc);
	
	act("You kneel and begin to pray.",A_ALWAYS, pc, null, null, TO_CHAR); 
	act("$1n kneels and begins to pray.",A_SOMEONE, pc, null, null, TO_REST);
	pause;
   tt:=atoi(self.extra.["$PK_TIMER"].descr);
	if(not(realtime-tt>600))
	{
		act("As you pray, a sense that recent battles prevent focus.",A_ALWAYS, pc, null, null, TO_CHAR);
		goto lostpc;
	}
	act("As you pray, a sense of purpose builds within you.",A_ALWAYS, pc, null, null, TO_CHAR); 	
	pause;
	act("The light of the candles slowly stops its flickering, and steadies.",A_ALWAYS, pc, null, null, TO_ALL); 
	pause;
	act("The light begins to intensify, the formerly dark room is now bright as day.",A_ALWAYS, pc, null, null, TO_ALL);
	pause;
	act("The world around you begins to dissolve.",A_ALWAYS, pc, null, null, TO_CHAR); 
	pause;
	act("There is a <div class='cpy'>bright flash</div>!",A_ALWAYS, pc, null, null, TO_ALL);
	link(pc,findroom("sanctum@bounty"));
	exec("look",pc);
	act("The candle light returns to its flickering.",A_ALWAYS, pc, null, null, TO_ROOM); 
	
:lostpc:
	unsecure(pc);
	goto start;
}
dilend // END Pray

dilbegin pray2();
var
  pc: unitptr;
  exdp: extraptr;

code
{
	heartbeat := PULSE_SEC*2;

:start:
	wait(SFB_CMD, command("pray") and ((JOIN_ONGOING in activator.quests) or (JOIN_COMPLETE in activator.quests)));
	block;
	pc := activator;
	secure(pc,lostpc);
	act("You kneel and begin to pray.",A_ALWAYS, pc, null, null, TO_CHAR); 
	act("$1n kneels and begins to pray.",A_SOMEONE, pc, null, null, TO_REST);
	pause;
	act("There is a <div class='cpw'>cold draft</div>.",A_ALWAYS, pc, null, null, TO_ALL);
	pause;
	act("The world around you dissolves.",A_ALWAYS, pc, null, null, TO_CHAR); 
	link(pc,findroom("shrine@bounty"));
	exec("look",pc);
	act("The room returns to normal.",A_ALWAYS, pc, null, null, TO_ROOM); 
:lostpc:
	unsecure(pc);
	goto start;
}
dilend // END Pray2

dilbegin feast();
var
	pc : unitptr;
	u : unitptr;
code
{
	heartbeat:=PULSE_SEC*6;
	
:start:
	
	wait(SFB_CMD, command("feast") and ((JOIN_ONGOING in activator.quests) or (JOIN_COMPLETE in activator.quests)));

	block;
	pc:= activator;
	secure(pc,lostpc);
	
	act("You sit and partake in the hunters feast.",A_ALWAYS, pc, null, null, TO_CHAR);
	act("$1n sits and partakes in the hunters feast.",A_ALWAYS, pc, null, null, TO_REST);
	pause;
	if(not("$feasted" in pc.extra))
	{
		act("You have an uneasy feeling that you're being watched.",A_ALWAYS, pc, null, null, TO_CHAR);
		pause;
		act("As you continue eating the feeling grows stronger.",A_ALWAYS, pc, null, null, TO_CHAR);
		pause;
		act("You suddenly realize that you are not alone.",A_ALWAYS, pc, null, null, TO_CHAR);
		u := load("guide@bounty");
		goto lostpc;
	}
	act("You finish eating, and take a moment to rest.",A_ALWAYS, pc, null, null, TO_CHAR);
	exec("rest",pc);
	pause;
	pc.hp := pc.max_hp;
	pc.endurance := pc.max_endurance;
	pc.mana := pc.max_mana;
	pc.full:=24;
	pc.thirst:=24;
	act("You feel fully restored.",A_ALWAYS, pc, null, null, TO_CHAR);
	
	:lostpc:
	unsecure(pc);
	goto start;
}
dilend // END Feast

dilbegin expel();
var
	pc:unitptr;
code
{
	heartbeat := PULSE_SEC;
	
:start:
	
	wait(SFB_PRE, command(CMD_AUTO_DAMAGE) and (target == self));

	pc:= activator;
	secure(pc,lostpc);
	
	exec("say It is a special kind of fool who would attack me here.",self);
	pause;
	act("$1n gestures, and the world fades.",A_SOMEONE, self, pc, null, TO_CHAR);
	act("$1n gestures, and $2n begins to fade.",A_SOMEONE, self, pc, null, TO_ROOM);
	pc.hp := 0;
	pc.endurance := 0;
	pc.mana := 0;
	subextra(pc.extra, "$daily_streak");
	position_update(pc);
	link(pc,findroom("entry_room@bounty"));
	act("You feel a searing pain!",A_SOMEONE, self, pc, null, TO_CHAR);
:lostpc:
	unsecure(pc);
	goto start;
}
dilend // END Expel

dilbegin guide();
var
	pc:unitptr;
code
{
	heartbeat:=PULSE_SEC*4;
	
:start:
	
	wait(SFB_CMD, (activator.type == UNIT_ST_PC) and (JOIN_ONGOING in activator.quests) and (not("$feasted" in activator.extra)));

	pc:= activator;
	secure(pc,lostpc);
	pause;
	exec("say Please, dont let me interrupt you partaking of this feast.", self);
	pause;
	exec("say After all, it was prepared just for your arrival.", self);
	pause;
	exec("say I do however have... a question for you.", self);
	pause;
	exec("say The Bounty Hunters have been here for a period of time which extends beyond our records.", self);
	pause;
	exec("say Indeed, The Historian believes this collective has existed since before ANY written records.", self);
	pause;
	exec("say I'll be frank, "+pc.name+". Our guild is at risk.", self);
	pause;
	exec("say Our way of living is at risk.", self);
	pause;
	exec("say A great enemy is preparing to unleash its fury upon us.", self);
	pause;
	exec("say While we have worked at the services of emperors, kings, demons and angels, a new force" +
		" which considers itself the face of a just world is rising.", self);
	pause;
	exec("say While we have never operated in the shadows, and certainly consider our role one that works" +
		" to bring balance in the world, some believe we need to be destroyed.", self);
	pause;
	exec("ponder",self);
	pause;
	exec("say Trust is hard to come by, but I believe you can be relied on.", self);
	pause;
	exec("say Go and speak to The Historian. He can give you further guidance.", self);
	pause;
	exec("say One final note - you may leave here and return at any time. Resume your prayers in the Inner Sanctum, and you will find yourself returned to the world outside.", self);
	pc.hp := pc.max_hp;
	pc.endurance := pc.max_endurance;
	pc.mana := pc.max_mana;
	pc.full:=24;
	pc.thirst:=24;
	act("As you finish the feast, you feel fully restored.",A_ALWAYS, pc, null, null, TO_CHAR);
	addextra(pc.extra,{"$feasted"},"0");
	position_update(pc);
	act("You suddenly notice that The Guide is no longer here.",A_ALWAYS, pc, null, null, TO_ALL);
	destroy(self);
	
:lostpc:

	unsecure(pc);
	goto start;
}
dilend // END Guide

dilbegin historian();
var
	pc:unitptr;
code
{
	heartbeat:=PULSE_SEC*4;
	
:start:
	
	wait(SFB_CMD, (activator.type == UNIT_ST_PC) and (JOIN_ONGOING in activator.quests) and ("$feasted" in activator.extra) and (not("$historian_ongoing" in activator.extra)));

	pc:= activator;
	secure(pc,lostpc);
	
	pause;
	exec("say Welcome "+pc.name+".", self);
	pause;
	exec("say I hope The Guide made you feel welcome?", self);
	pause;
	exec("say There was considerable preparation put into your arrival.", self);
	pause;
	exec("say I'll not look to deceive you, the Guild is in need of your help.", self);
	pause;
	exec("say I've been here keeping these timeless records for years beyond count.", self);
	pause;
	addextra(pc.extra,{"$historian_ongoing"},"0");
	
:lostpc:

	unsecure(pc);
	goto start;

}
dilend


// duration is number of minutes, amt is amount of xp, kind is "xp","kills","both"
dilbegin spree(dur : integer, amt : integer, kind : string);
var
	st : integer;
	sc : integer;
	sx : integer;
	bx : integer;
	seconds : integer;
	minutes : integer;
code
{
:init:

	subextra(self.extra,"$SPREE_TIMER");
	addextra(self.extra,{"$SPREE_TIMER"},itoa(realtime));
	subextra(self.extra,"$SPREE_COUNT");
	addextra(self.extra,{"$SPREE_COUNT"},itoa(0));
	subextra(self.extra,"$SPREE_XP");
	addextra(self.extra,{"$SPREE_XP"},itoa(0));
	bx := self.exp;
:start:
	

	
	wait(SFB_DEAD, command(CMD_AUTO_DEATH) and (activator == self.fighting));

	st := atoi(self.extra.["$SPREE_TIMER"].descr);
	
	if(realtime - st > (dur * 60))
		goto donezo;

	sx := self.exp - bx;	
	sc := sc + 1;
	subextra(self.extra,"$SPREE_COUNT");
	addextra(self.extra,{"$SPREE_COUNT"},itoa(sc));
	subextra(self.extra,"$SPREE_XP");
	addextra(self.extra,{"$SPREE_XP"},itoa(sx));
	sendtext ("You have "+itoa(sc)+" kills and "+itoa(sx)+" experience in your spree.<br/>",self);
	
:check_time:

	seconds := 0;
	minutes := 0;
	seconds := realtime - st;
	seconds := 600 - seconds;
	minutes := seconds / 60;
	
	if (minutes<1)
	{
		if (seconds==1)
			sendtext ("You have 1 more second before your spree ends.<br/>",self);
		else
			sendtext ("You have "+itoa(seconds)+" more seconds before your spree ends.<br/>",self);
	}
	else
	{
		seconds :=seconds-(minutes*60);
		if ((minutes==1) and (seconds==1))
			sendtext ("You have 1 minute and 1 second before your spree ends.<br/>",self);
		else if (minutes==1)
			sendtext ("You have 1 minute and "+itoa(seconds)+" seconds before your spree ends.<br/>",self);
		else if (seconds==1)
			sendtext ("You have "+itoa(minutes)+" minutes and 1 second before your spree ends.<br/>",self);
		else
			sendtext ("You have "+itoa(minutes)+" minutes and "+itoa(seconds)+" seconds before your spree ends.<br/>",self);
	}
	goto start;
:donezo:

	subextra(self.extra,"$SPREE_COUNT");
	addextra(self.extra,{"$SPREE_COUNT"},itoa(sc));
	subextra(self.extra,"$SPREE_XP");
	addextra(self.extra,{"$SPREE_XP"},itoa(sx));
	act("Your spree has come to an end! You bagged "+itoa(sc)+" kills and gained "+itoa(sx)+" experience.",A_ALWAYS, self, null, null, TO_CHAR);
	quit;
}
dilend

dilbegin new_spree();
var
	pc : unitptr;
	i : integer;
	dur : integer;
	amt : integer;
	kind : string;
code
{
	heartbeat := PULSE_SEC*4;
	
:start:
	
	wait(SFB_CMD, (activator.type == UNIT_ST_PC) and (command("say")) and (("spree" == argument)));

	pc := activator;
	secure(pc,donezo);
	
	exec("say A new spree huh? OK. It will be a 10 minute spree requiring 30,000 xp",self);
	dur := 10;
	amt := 30000;
	kind := "both";
	dilcopy ("spree@bounty("+itoa(dur)+","+itoa(amt)+","+kind+")",pc);
	
:donezo:
	
	unsecure(pc);
	goto start;	
}
dilend

dilbegin integer dateformat (s : string);
var
	i : integer;
	buf : string;
	slbuf : stringlist;
code
{
	buf := "";
	slbuf := split(s,".");
	i := 0;
	while (i < length(slbuf))
	{
		if (atoi(slbuf.[i]) < 10)
			slbuf.[i] := "0" + slbuf.[i];
		buf := buf + slbuf.[i];
		i := i + 1;
	}
	i := atoi(buf);
	return (i);
}
dilend // END dateformat

dilbegin make_bounty();
external
	integer dateformat@bounty (s : string);
var 
	item 	: unitptr;
	pc 		: unitptr;
	exdp   	: extraptr; 
	i 		: integer;
	targ	: unitptr;
	bty		: unitptr;
	arg 	: string;
	sdate   : string;
	smonth	: string;
	sltime	: stringlist;
	slmonth : stringlist;
	slfmonth : stringlist;
	dspl	: stringlist;
	blocked : stringlist;
	slextra : stringlist;
	estreak : extraptr;
	which   : string;
	idate	: integer;
	ibdate	: integer;
	sltemp  : stringlist;
	buf 	: string;
code
{
:init:

	slmonth := {"Skip","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"};
	slfmonth := {"Skip","January","February","March","April","May","June","July","August","September","October","November","December"};
	blocked := {"basis","death","spells","skills","commands","baseget","basemove","wiz","baselook",
				"update","help","boards","comm","socials","set","mail","function","restrict","newbie",
				"justice","arena","competition","clan","holiday20","guild_quest","guild_paths",
				"assassin","clericguild","fightersguild","mageguild","necro_guild","offices","paladin_guild",
				"sorcerer","thievesguild","druid","knight","ranger","rebirth","barbarian","bounty"};

:start:

	heartbeat := PULSE_SEC;
	wait(SFB_CMD, (activator.type == UNIT_ST_PC) and (command("say")) and 
		(("contract" == argument) or ("daily contract" == argument) or ("monthly contract" == argument) or ("bonus contract" == argument)));
	
	arg := argument;
	pc := activator;
	secure(pc, start);
	
	pause;
	buf := "";
	
	if(pc.level < 50)
	{
		exec("Say You need to be at least level 50 to take contracts "+pc.name+"!", self);	
		goto start;
	}

	slextra := {""};
	sltime := split(asctime(realtime), " "); 

	// This is to fix an apparent bug where an extra space in the asctime output can result in
	// an empty string being populated into the stringlist, fucking up the parsing.
	while ("" in sltime)
		substring(sltime,"");

	i := 0;
	while(i <= 12)
	{
		if(slmonth.[i] == sltime.[1])
			break;
		i := i + 1;
	}
	sdate := sltime.[4] + "." + itoa(i) + "." + sltime.[2];
	smonth := sltime.[4] + "." + itoa(i);
	
	if(arg == "daily contract")
	{
		arg := "daily";
		goto this_bounty;
	}
	if(arg == "monthly contract")
	{
		arg := "monthly";
		goto this_bounty;
	}
	if(arg == "bonus contract")
	{
		arg := "bonus";
		goto this_bounty;
	}
	
	exec("Say So "+pc.name+" you'd like to see a contract.", self);	
	pause;
	
:which_bounty:
	
	exec("Say Would you like the daily, monthly, or a bonus contract?", self);	
	exec("Say You may also shake your head to decline.", self);
	wait(SFB_CMD, (activator.type == UNIT_ST_PC) and ((command("say")) and (("daily" in argument) or ("monthly" in argument) or ("bonus" in argument)))  or (command("shake")));
	
	if (command ("shake"))
		goto decline;
	
	arg := getword(argument);

:this_bounty:
	pause;
	if (arg == "daily")
	{
		exdp := pc.extra.["$daily_target"];
		slextra.[0] := "$daily_target";
		which := arg;
	}
	else if (arg == "monthly")
	{
		sdate := smonth;
		exdp := pc.extra.["$monthly_target"];
		slextra.[0] := "$monthly_target";
		which := arg;
	}
	else if (arg == "bonus")
	{
		sdate := "bonus";
		exdp := pc.extra.["$bonus_target"];
		slextra.[0] := "$bonus_target";
		which := arg;
	}
	else
		goto which_bounty;
	
:give_bounty:

	if(exdp != null)
	{
		dspl := split(exdp.descr, "|");
		ibdate := dateformat(dspl.[0]);
		idate := dateformat(sdate);
		if (dspl.[0] == sdate)
		{
			if((sdate == "bonus") and ("DONE" in dspl))
			{
				while ("$bonus_target" in pc.extra)
					subextra(pc.extra, "$bonus_target");
				goto new_target;
			}
			else if(sdate == "bonus")
				goto skip_bonus;
			goto have_bounty;
		}
		
		if((not("DONE" in dspl)) or (idate > ibdate+2))	
		{
			estreak := pc.extra.["$"+which+"_streak"];
			if (estreak != null)
			{
				if (atoi(estreak.descr) > 1)
					exec("say Ha! It seems your streak has come to an end. You had closed "+estreak.descr+" "+which+" bounties in a row!",self);
				else
					exec("say Well, you weren't able to close that last "+which+" contract.",self);
				subextra(pc.extra, "$"+which+"_streak");
			}
		}
		subextra(pc.extra, "$"+which+"_target");
	}
:new_target:
	targ := findrndunit(pc,FIND_UNIT_WORLD,UNIT_ST_NPC);
	if (targ.zoneidx in blocked)
		goto new_target;
	if (((targ.race > RACE_CNIDARIA_MIN) and (targ.race <= RACE_CNIDARIA_MAX)) or
       ((targ.race > RACE_PLANT_MIN) and (targ.race <= RACE_PLANT_MAX)))
		goto new_target;
	addextra (pc.extra,slextra,sdate + "|" + targ.symname + "|" + targ.title);
	if(which == "monthly")
		which := slfmonth.[i];
	
	buf := "<br><div class='cpw'>Contract Date: </div><div class='cr'>" + sdate +
		"<br><div class='cpw'>Contract Term: </div><div class='cr'>" + which +
		"<br><div class='cpw'>Target Name: </div><div class='cr'>" + targ.name + 
		"<br><div class='cpw'>Target Alias: </div><div class='cr'>" + targ.title + 
		"<br><div class='cpw'>Target Description: </div><div class='cr'> " + targ.outside_descr;
	if(not(findsymbolic(pc, "tablet@bounty", FIND_UNIT_INVEN)))
	{
		exec("Say Here you go "+pc.name+", a "+which+" contract.", self);	
		bty := load("contract@bounty");
		bty.extra.[0].descr := bty.extra.[0].descr + buf;
		addextra (bty.extra,{"$symname"},targ.symname);
		addextra (bty.extra,{"$player"},pc.name);
		addextra (bty.extra,{"$date"},sdate);
		link(bty,pc);
		act ("$2n quietly slips you a contract.", A_SOMEONE, pc, self, null, TO_CHAR);
		act ("$2n quietly slips $1n something.", A_SOMEONE, pc, self, null, TO_REST);
	}
	else
		exec("say I've updated your tablet with the new "+which+" contract, "+pc.name,self);
	
	act (buf, A_ALWAYS, pc, null, null, TO_ALL);	
	goto the_end;
	
:have_bounty:
	// maybe we should allow multiples?
	// check to see if the first is done. 
	// how do we allow cancellation if you cant complete?
	exec("say Bugger off! You've already taken a "+which+" contract.",self);
	goto the_end;
	
:skip_bonus:
	
	exec("say You've already taken a "+which+" contract.",self);
	exec("say Are you suggesting that you'd like to abandon this one, and get another?",self);
	wait(SFB_CMD, (activator.type == UNIT_ST_PC) and (command("nod") or command("shake")));
	
	pc := activator;
	
	if (command ("shake"))
		goto decline;
	
	if(command ("nod"))
	{
		heartbeat := PULSE_SEC/4;
		pause;
		exec("cackle",self);
		experience(-25000,pc);
		subextra(pc.extra, "$bonus_target");
		subextra(pc.extra, "$bonus_streak");
		act("<div class='xpgain'>You have lost 25000 experience points!</div>",A_ALWAYS, pc, null, null, TO_CHAR); 
		if(not("$bounty_points" in pc.extra))
			addextra (pc.extra,{"$bounty_points"},"0");	
		if(atoi(pc.extra.["$bounty_points"].descr) > 5)
		{
			act("<div class='xpgain'>You have lost 5 bounty points!</div>",A_ALWAYS, pc, null, null, TO_CHAR);
			pc.extra.["$bounty_points"].descr := itoa(atoi(pc.extra.["$bounty_points"].descr)-5);
		}
		else
		{
			act("<div class='xpgain'>You have lost "+pc.extra.["$bounty_points"].descr+" bounty points!</div>",A_ALWAYS, pc, null, null, TO_CHAR);
			pc.extra.["$bounty_points"].descr := "0"; 
		}
		goto the_end;
	}
	
:decline:
	heartbeat := PULSE_SEC/4;
	pause;
	exec("Say Very well then.", self);
:the_end:
	unsecure(pc);
	goto start;

}
dilend

dilbegin claim_bounty();
var 
	pc 		: unitptr;
	med 	: unitptr;
	edaily 	: extraptr;
	emonth  : extraptr;
	ebonus  : extraptr;
	estreak : extraptr;
	etotal 	: extraptr;
	emax    : extraptr;
	smtarg	: string;
	sdtarg	: string;
	sbtarg  : string;
	sdone	: string;
	sdate   : string;
	etarg 	: extraptr;
	slmonth : stringlist;
	sldt	: stringlist;
	slmt	: stringlist;
	slbt	: stringlist;
	slstr   : stringlist;
	sltot   : stringlist;
	slnew	: stringlist;
	sltime  : stringlist;
	i   	: integer;
	targ    : unitptr;
	rwrd    : integer;
	arg 	: string;
	bp		: integer;
code
{
:init:

	slmonth := {"Skip","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"};

:start:

	on_activation((self.position == POSITION_FIGHTING), skip);
	wait(SFB_DONE, command("give") and (target == self));
	
	pc := activator;
	med := medium;
	secure(pc, labsecure);
	
	slnew := {""};
	substring (slnew,"");
	if ((self.inside.symname == "mulligan@bounty") and (self.inside.symname == med.symname))
	{
		exec("snicker",self);
		exec("say So you need to be freed from your contract "+pc.name+"?",self);
		exec("say It seems your... documentation is in order. Just say 'daily' or 'monthly' and it will be ended.",self);
		wait(SFB_CMD, (activator.type == UNIT_ST_PC) and ((command("say")) and (("daily" == argument) or ("monthly" == argument))));
	
		arg := argument;
		pause;
		if (arg == "daily")
		{			
			if("DONE" in pc.extra.["$daily_target"].descr)
			{
				exec("say Your daily contract is already closed "+pc.name+"!",self);
				exec("give mulligan "+pc.name, self);
				goto start;
			}
			subextra(pc.extra, "$daily_target");
		}
		else if (arg == "monthly")
		{
			if("DONE" in pc.extra.["$monthly_target"].descr)
			{
				exec("say Your monthly contract is already closed "+pc.name+"!",self);
				exec("give mulligan "+pc.name, self);
				goto start;
			}
			subextra(pc.extra, "$monthly_target");
		}
		
		destroy(self.inside);
		exec("say Consider the contract forgotten "+pc.name+".",self);
		goto start;
	}
	
	if((self.inside.symname != "head@death") and (self.inside.symname == med.symname))
	{
		exec("say What would I do with this, "+pc.name+"?",self);
		exec("give "+self.inside.name+" "+pc.name,self);
		goto start;
	}
	
	edaily := pc.extra.["$daily_target"];
	emonth := pc.extra.["$monthly_target"];
	ebonus := pc.extra.["$bonus_target"];
	sldt := split(edaily.descr,"|");
	slmt := split(emonth.descr,"|");
	slbt := split(ebonus.descr,"|");
	sdtarg := sldt.[2];
	smtarg := slmt.[2];
	sbtarg := slbt.[2];
	sltime := split(asctime(realtime), " ");	
	while ("" in sltime)
		substring(sltime,"");
	i := 0;
	while(i <= 12)
	{
		if(slmonth.[i] == sltime.[1])
			break;
		i := i + 1;
	}
	// if you have turned in a valid bounty
	
	if("The decapitated head of "+sdtarg+" is laying here." == self.inside.outside_descr)
	{
		etarg := edaily;
		emax := pc.extra.["$daily_max"];
		estreak := pc.extra.["$daily_streak"];
		etotal := pc.extra.["$daily_total"];
		sdone := "daily"; 
		sdate := sltime.[4] + "." + itoa(i) + "." + sltime.[2];
		
		if (estreak == null)
		{
			addextra (pc.extra,{"$daily_streak"},"0");
			estreak := pc.extra.["$daily_streak"];
		}
		if (etotal == null)
		{
			addextra (pc.extra,{"$daily_total"},"0");
			etotal := pc.extra.["$daily_total"];
		}
		if (emax == null)
		{
			addextra (pc.extra,{"$daily_max"},"0");
			emax := pc.extra.["$daily_max"];
		}
	}
	else if ("The decapitated head of "+smtarg+" is laying here." == self.inside.outside_descr)
	{
		etarg := emonth;
		emax := pc.extra.["$monthly_max"];
		estreak := pc.extra.["$monthly_streak"];
		etotal := pc.extra.["$monthly_total"];
		sdone := "monthly";
		sdate := sltime.[4] + "." + itoa(i);

		if (estreak == null)
		{
			addextra (pc.extra,{"$monthly_streak"},"0");
			estreak := pc.extra.["$monthly_streak"];
		}
		if (etotal == null)
		{
			addextra (pc.extra,{"$monthly_total"},"0");
			etotal := pc.extra.["$monthly_total"];
		}
		if (emax == null)
		{
			addextra (pc.extra,{"$monthly_max"},"0");
			emax := pc.extra.["$monthly_max"];
		}
	}
	else if ("The decapitated head of "+sbtarg+" is laying here." == self.inside.outside_descr)
	{
		etarg := ebonus;
		emax := pc.extra.["$bonus_max"];
		estreak := pc.extra.["$bonus_streak"];
		etotal := pc.extra.["$bonus_total"];
		sdone := "bonus";
		sdate := sltime.[4] + "." + itoa(i) + "." + sltime.[2];

		if (estreak == null)
		{
			addextra (pc.extra,{"$bonus_streak"},"0");
			estreak := pc.extra.["$bonus_streak"];
		}
		if (etotal == null)
		{
			addextra (pc.extra,{"$bonus_total"},"0");
			etotal := pc.extra.["$bonus_total"];
		}
		if (emax == null)
		{
			addextra (pc.extra,{"$bonus_max"},"0");
			emax := pc.extra.["$bonus_max"];
		}
	}
	else
	{
		exec("cackle",self);
		exec("say Kill happy arent we "+pc.name+"? This wasn't your target.",self);
		exec("give "+self.inside.name+" "+pc.name,self);
		goto labsecure;
	}
	
	
	slstr := split(etarg.descr, "|");
	if("DONE" in slstr)
		goto already_done;
	if(not("bonus" in slstr))
		if (slstr.[0] != sdate)
			goto already_done;
		
	destroy(self.inside);	
	
	// increment pointers as necessary
	
	estreak.descr := itoa(atoi(estreak.descr) + 1);
	etotal.descr := itoa(atoi(etotal.descr) + 1);
	etarg.descr := etarg.descr + "|DONE";
	if((atoi(estreak.descr) > atoi(emax.descr)) and (sdone != "bonus"))
		emax.descr := estreak.descr;
	
	
	
	/*

This code is for creating the signs and tracking leaders. 
It is all based on extras on the PC's, so we can capture
data for now until we're ready to implement.

I think we should probably ditch this system entirely, and
leverage the competition boards. Will investigate.

	targ := findsymbolic("day_sign@bounty");
	if (targ.extra.[0].descr == "")
	{
		sendtext("freshies - add "+pc.name,pc);
		addstring(slnew, pc.name);
		addstring(slnew, estreak.descr);
		goto freshies;
	}
	slstr := split(replace("<br>"," - ",targ.extra.[0].descr)," - ");
	substring (slstr,"");
	i := 0;
	while(i < length(slstr))
	{
		sendtext("i == "+itoa(i)+" lenght == "+ itoa(length(slstr)),pc);
		if(atoi(estreak.descr) > atoi(slstr.[i+1]))
		{
			sendtext("greater - add "+pc.name,pc);
			addstring(slnew, pc.name);
			addstring(slnew, estreak.descr);
			if (pc.name != slstr.[i])
			{
				sendtext("great and not equal - add "+slstr.[i],pc);
				addstring(slnew, slstr.[i]);
				addstring(slnew, slstr.[i+1]);
			}
		}		
		else if(atoi(estreak.descr) <= atoi(slstr.[i+1]))
		{
			sendtext("less or equal - add "+slstr.[i],pc);
			addstring(slnew, slstr.[i]);
			addstring(slnew, slstr.[i+1]);
			
			// just added this - testing
			// trying to handle scenarios where the board isnt full and if
			// have less than someone else
			//addstring(slnew, pc.name);
			//addstring(slnew, estreak.descr);
		}
		if (i == 18)
			break;
		i := i + 2;
	}
:freshies:
	i := 0;
	targ.extra.[0].descr := "";
	sendtext("i == "+itoa(i)+" length == "+ itoa(length(slnew)),pc);
	while (i <= length(slnew)-2)
	{
		sendtext("i == "+itoa(i)+" length == "+ itoa(length(slnew)),pc);
		sendtext("writing slnew: "+slnew.[i],pc);
		targ.extra.[0].descr := targ.extra.[0].descr + slnew.[i];
		targ.extra.[0].descr := targ.extra.[0].descr + " - ";
		targ.extra.[0].descr := targ.extra.[0].descr + slnew.[i+1];
		targ.extra.[0].descr := targ.extra.[0].descr + "<br>";
		i := i + 2;
	}
	
	*/
	
	
	destroy(self.inside);
	exec("say Yes, "+slstr.[2]+"'s head.",self);
	exec("say It appears we can consider your "+sdone+" contract closed, "+pc.name+".",self);
	exec("grin",self);
	
	// The reward section //
	
	exec("say Your streak is now at "+estreak.descr+". Here is the commission.",self);
	
	// set streak length
	i := atoi(estreak.descr);
	if(sdone == "daily")
	{
		// base value in XP.
		// cash reward will be iron = xp value / 2
		rwrd := 1000;
		if (i < 7)
			rwrd := (rwrd * i) + 5000;
		else if (i < 10)
			rwrd := 15000;
		else if (i < 100)
			rwrd := rwrd * (i * 3);
		else if (i < 200)
			rwrd := rwrd * (i * 4);
		else if (i < 300)
			rwrd := rwrd * (i * 5);
		else if (i >= 300)
			rwrd := rwrd * (i * 6);
		
		bp := 2;
		
		// streak milestone rewards
		if(i == 14 or i == 30 or i == 60 or i == 90 or i == 180 or i == 365)
		{
			exec("say I've included a little something for making "+itoa(i)+" daily contracts in a row.",self);
			bp := bp * 2;
			rwrd := rwrd * 2;
		}
		
	}
	else if (sdone == "monthly")
	{
		// base value in XP.
		// cash reward will be iron = xp value / 2
		rwrd := 10000;
		if (i < 3)
			rwrd := rwrd * (i * 2);
		else if (i < 10)
			rwrd := rwrd * (i * 3);
		else if (i < 15)
			rwrd := rwrd * (i * 4);
		else if (i >= 20)
			rwrd := rwrd * (i * 5);
		
		bp := 10;
		// streak milestone rewards
		if(i == 6 or i == 12 or i == 18 or i == 24)
		{
			exec("say I've included a little something for making "+itoa(i)+" monthly contracts in a row.",self);
			bp := bp * 2;
			rwrd := rwrd * 2;
		}
	}
	else if (sdone == "bonus")
	{
		// base value in XP.
		// cash reward will be iron = xp value / 2
		rwrd := 5000;	
		bp := 1;
		// streak milestone rewards
		if((i == 10) or (i == 20) or (i == 30) or (i == 40) or (i == 50))
		{
			exec("say I've included a little something for making "+itoa(i)+" bonus contracts in a row.",self);
			bp := 2;
			rwrd := rwrd * 2;
		}
	}
	
	act("<br>$2n hands you some coins.",A_SOMEONE, pc, self, null, TO_CHAR);
	i := transfermoney(null,pc,(rwrd/2));	
	experience(rwrd, pc);
	act("<br><div class='hint'>Contract Completed!</div>",A_ALWAYS, pc, null, null, TO_CHAR); 
	act("<div class='xpgain'>You recieve "+itoa(rwrd)+" experience.</div>",A_ALWAYS, pc, null, null, TO_CHAR); 
	if(not("$bounty_points" in pc.extra))
		addextra (pc.extra,{"$bounty_points"},"0");	
	pc.extra.["$bounty_points"].descr := itoa(atoi(pc.extra.["$bounty_points"].descr)+bp);
	if(bp == 1)
		act("<div class='xpgain'>You recieve "+itoa(bp)+" bounty point.</div>",A_ALWAYS, pc, null, null, TO_CHAR); 
	else
		act("<div class='xpgain'>You recieve "+itoa(bp)+" bounty points.</div>",A_ALWAYS, pc, null, null, TO_CHAR); 
	goto labsecure;
	// End reward section // 
	
:already_done:

	if (atoi(estreak.descr) > 1)
		exec("say This contract has already closed! It seems your streak of "+estreak.descr+" "+sdone+" contracts has come to an end.",self);
	else
		exec("say Your first contract in the streak, and it had already closed!",self);
	subextra(pc.extra, "$"+sdone+"_streak");
	
:labsecure:

	unsecure(pc);	
	goto start;
}
dilend		

dilbegin restore_pot(aff : string, strength : string);
var
	pc : unitptr;
code
{
	wait(SFB_CMD, command("quaff") and ("potion" in argument));
	pc := activator;

	if(aff == "restore")
	{
		if(strength == "full")
		{
			pc.hp := pc.max_hp;
			pc.endurance := pc.max_endurance;
			pc.mana := pc.max_mana;
		}
		else if(strength == "strong")
		{
			if(pc.hp < ((pc.max_hp / 4)*3))
				pc.hp := ((pc.max_hp / 4)*3);
			if(pc.endurance < ((pc.max_endurance / 4)*3))
				pc.endurance := ((pc.max_endurance / 4)*3);
			if(pc.mana < ((pc.max_mana / 4)*3))
				pc.mana := ((pc.max_mana / 4)*3);
		}
		else if(strength == "half")
		{
			if(pc.hp < (pc.max_hp / 2))
				pc.hp := (pc.max_hp / 2);
			if(pc.endurance < (pc.max_endurance / 2))
				pc.endurance := (pc.max_endurance / 2);
			if(pc.mana < (pc.max_mana / 2))
				pc.mana := (pc.max_mana / 2);
		}
	}
	else if (aff == "hp")
	{
		if(strength == "full")
			pc.hp := pc.max_hp;
		else if(strength == "strong")
		{
			if(pc.hp < ((pc.max_hp / 4)*3))
				pc.hp := pc.hp + ((pc.max_hp / 4)*3);
		}
		else if(strength == "half")
		{
			if(pc.hp < (pc.max_hp / 2))
				pc.hp := pc.hp + (pc.max_hp / 2);
		}
	}
	else if (aff == "endurance")
	{
		if(strength == "full")
			pc.endurance := pc.max_endurance;
		else if(strength == "strong")
		{
			if(pc.endurance < ((pc.max_endurance / 4)*3))
				pc.endurance := pc.endurance + ((pc.max_endurance / 4)*3);
		}
		else if(strength == "half")
		{
			if(pc.endurance < (pc.max_endurance / 2))
				pc.endurance := pc.endurance + (pc.max_endurance / 2);
		}
	}
	else if (aff == "mana")
	{
		if(strength == "full")
			pc.mana := pc.max_mana;
		else if(strength == "strong")
		{
			if(pc.mana < ((pc.max_mana / 4)*3))
				pc.mana := pc.mana + ((pc.max_mana / 4)*3);
		}
		else if(strength == "half")
		{
			if(pc.mana < (pc.max_mana / 2))
				pc.mana := pc.mana + (pc.max_mana / 2);
		}
	}
	quit;
}
dilend

dilbegin hint (which : string, htype : string);
var
	pc : unitptr;
	zn : string;
	exdp : extraptr;
	zp : zoneptr;
	slt : stringlist;
	uhin : unitptr;
	sdate : string;
	targ : unitptr;
code
{
:start:
	wait(SFB_CMD, (command("look")) and ("hint" in argument));
	pc := activator;
	zp := zhead();
	heartbeat := PULSE_SEC;
	if(which == "d")
		exdp :=  pc.extra.["$daily_target"];
	else if(which == "m")
		exdp :=  pc.extra.["$monthly_target"];
	slt := split(exdp.descr,"|");
	if(slt.[3] == "DONE")
	{
		act("You can only use your hint on an open contract!",A_SOMEONE, pc, self, null, TO_CHAR);
		block;
		goto start;
	}
	sdate := slt.[0];
	targ := findsymbolic(slt.[1]);
	zn := targ.zoneidx;
	self.extra.[0].descr := self.extra.[0].descr + 
	"<br><div class='cpw'>Contract Date: </div><div class='cpc'>" + sdate +
	"<br><div class='cpw'>Target Name: </div><div class='cpc'>" + targ.name + 
	"<br><div class='cpw'>Target Alias: </div><div class='cpc'>" + targ.title + 
	"<br><div class='cpw'>Target Description: </div><div class='cpc'> " + targ.outside_descr;
	while (zp)
	{
		if(zp.name == zn)
		{
			slt := split(zp.title,"@");
			if(htype == "z" )
			{
				self.extra.[0].descr := self.extra.[0].descr + 
				"<br><div class='cpw'>Zone Name: </div><div class='cpc'>" + slt.[0];
			}
			else if(htype == "c")
			{
				self.extra.[0].descr := self.extra.[0].descr + 
				"<br><div class='cpw'>Continent Name: </div><div class='cpc'>" + slt.[1];
			}
			pause;
			quit;
		}
		zp := zp.next;
	}
	quit;
}
dilend


dilbegin shoplist(items : stringlist);
var
	pc : unitptr;
	i : integer;
	ln : integer;
	buf : string;
	j : integer;
	bp : string;
	uitem : unitptr;
code
{
:init:

	heartbeat := PULSE_SEC;
	
	ln:=length(items);
	buf:="<b><div class='cpn'>Bounty Hunters Guild Shop</div></b>";
	buf:=buf+"<table><tr><th>Item # - </th><th>Item Name</th><th> - Bounty Points</th></tr>";
	i := 0;
	j := 1;
	while(i < (ln-2))
	{
		buf:=buf+"<tr><td>"+itoa(j)+" - </td><td>"+items.[i+1]+"</td><td> - "+items.[i+2]+"</td></tr>";
		i := i+3;
		j := j+1;
	}

:start:

	wait(SFB_CMD, (command("list")));
	block;
	pc := activator;
	if(not("$bounty_points" in pc.extra))
		addextra (pc.extra,{"$bounty_points"},"0");
	bp := pc.extra.["$bounty_points"].descr;
	bp := "</table><br><div class='cpc'>You have "+bp+" Bounty Points available.</div>";
	sendtext(buf+bp,pc);
	goto start;
}
dilend

dilbegin shopbuy(items : stringlist);
var
	pc : unitptr;	
	i : integer;
	ln : integer;
	j : integer;
	bp : string;
	ibp : integer;
	uitem : unitptr;
	arg : string;
code
{
:init:

	heartbeat := PULSE_SEC;
	
	ln:=length(items);
	i := 0;
	j := 1;
	while(i < (ln-2))
	{
		i := i+3;
		j := j+1;
	}
	
:start:
	
	wait(SFB_CMD, (command("buy")));
	block;
	
	pc := activator;
	arg := getword(argument);
	if(not("$bounty_points" in pc.extra))
		addextra (pc.extra,{"$bounty_points"},"0");
	bp := pc.extra.["$bounty_points"].descr;
	ibp := atoi(bp);
	i := 0;
	j := 1;
	while(i < (ln-2))
	{
		if(atoi(arg) == j)
		{
			if(atoi(items.[i+2]) <= ibp)
			{
				ibp := ibp - atoi(items.[i+2]);
				pc.extra.["$bounty_points"].descr := itoa(ibp);
				uitem := load(items.[i]+"@bounty");
				link(uitem, pc);
				exec("say Here is your "+uitem.name+" "+pc.name+"!",self);
			}
			else
				exec("say You don't have "+items.[i+2]+" bounty points "+pc.name+"!",self);
			goto start;
		}
		i := i+3;
		j := j+1;
	}
	exec("say Please select an item number from the list.",self);
	goto start;
}
dilend

%rooms

entry_room
title "<div class='cpn'>Entrance to Bounty Hunters Guild</div>"
descr
"Stepping out from bustle of Kings Road, the entrance to the Bounty Hunters 
Guild is a distinct change of environment. The large stone building extends 
high into the air and has a commanding presence. Tall trees provide ample 
shade during the bright days, and plenty of routes to approach... quietly. 
It seems that there has been significant wealth brought to the guild over 
many generations. A large set of double-doors extend into the darkness."

movement SECT_CITY
flags {UNIT_FL_NO_MOB}
ALWAYS_LIGHT

north to bounty_1;
south to kingroad5@ratswarf;

end

bounty_1
title "<div class='cpn'>Inside the Guild</div>"
descr
"Through the large double-doors the quiet of this space encompasses you. While 
the building is largely unadorned and simple rough-hewn stone. The sheer size 
and scale of the place speak to the significant investments that have been 
made over many years. To the east and west more rooms expand into the vast hall, 
and to the south the outdoors and access to Kings Road can be seen in the distance."
flags {UNIT_FL_INDOORS}
movement SECT_CITY
ALWAYS_LIGHT

south to entry_room;
west to contracts;
east to shop;
north to shrine;

end

shop
title "<div class='cpn'>The Guild Shop</div>"
descr
"The many wares which are made available to guild members can be seen adorning 
nearly every wall and visible surface. From potions and tinctures, to notes and 
papers, and even jewely and weapons, there is an impressive array available. 
There is a large counter which has been cleared to make way for transaction"
flags {UNIT_FL_INDOORS}
movement SECT_CITY
ALWAYS_LIGHT

west to bounty_1;

end

contracts
names {"contracts"}
title "<div class='cpn'>The Contracts Room</div>"
descr
"Here away from the main hall of the guild, a quiet room filled with maps 
is in front of you. On every wall and table a map of a different part of 
the world sits. A large desk can be seen in the middle of the room, 
providing ample space for managing the myriad contracts the guild processes. 
Behind the desk darkness overcomes what light the torches shed."
flags {UNIT_FL_INDOORS}
movement SECT_CITY
ALWAYS_LIGHT

east to bounty_1;

end

shrine
title "<div class='cpn'>The Bounty Hunters Shrine</div>"
descr
"In the back of the great hall, a peaceful shrine pays homage to the gods 
of the hunt. Candles burn at the base of shrine, sending their flickering 
light into the darkness. Incense burns alongside the candles, and the 
scent brings visions of both frenzied chase, and gratifying calm."
flags {UNIT_FL_INDOORS, UNIT_FL_SACRED}
movement SECT_CITY
ALWAYS_LIGHT

south to bounty_1;

dilcopy pray@bounty();

end

sanctum
title "<div class='cpn'>The Inner Sanctum</div>"
descr
"This is the Inner Sanctum of the Bounty Hunters."
flags {UNIT_FL_INDOORS, UNIT_FL_SACRED, UNIT_FL_NO_TELEPORT}
movement SECT_CITY
ALWAYS_LIGHT

dilcopy pray2@bounty();

north to sanctum_1;

end

sanctum_1
title "<div class='cpn'>The Inner Sanctum</div>"
descr
"This is the Inner Sanctum of the Bounty Hunters."
flags {UNIT_FL_INDOORS, UNIT_FL_SACRED, UNIT_FL_NO_TELEPORT}
movement SECT_CITY
ALWAYS_LIGHT

dilcopy feast@bounty();

south to sanctum;

end

%mobiles

hunter
names {"bounty hunter","hunter","man"}    
title "the bounty hunter"        
descr "A tall man with a dark smirk stands in the shadows."
extra{}
"Tall and well muscled, he is of unknown origin. An dark smirk seems to permanently rest on his face. This 
appears to be the man who may offer a contract if you but ask." 

alignment -1000
M_AVG_HUMAN(100,SEX_MALE)
position POSITION_STANDING 

dilcopy make_bounty@bounty();
dilcopy claim_bounty();
dilcopy join();
dilcopy status();

end 

shopkeep
names {"shopkeeper","dwarf"}    
title "the guild shopkeeper"        
descr "A girthy dwarf with a warm smile stands behind the counter."
extra{}
"Girthy, and apparently not unfamiliar with his wine, the shopkeeper nevertheless 
seems to be rather friendly. Simply ask for his list to select from the guild wares." 

alignment 0
M_AVG_DWARF(100,SEX_MALE)
position POSITION_STANDING 

dilcopy shoplist@bounty({"tablet","Bounty Hunters Tablet","150",
						"full_restore","Potion of Full Restoration","100",
						"strong_restore","Potent Potion of Restoration","75",
						"half_restore","Potion of Restoration","50",
						"full_mana","Potion of Full Mana","40",
						"strong_mana","Potent Potion of Mana","30",
						"half_mana","Potion of Mana","20",
						"full_end","Potion of Full Endurance","40",
						"strong_end","Potent Potion of Endurance","30",
						"half_end","Potion of Endurance","20",
						"full_heal","Potion of Full Healing","40",
						"strong_heal","Potent Potion of Healing","30",
						"half_heal","Potion of Healing","20",
						"mulligan","Contract Breaking Note","100",
						"dz_hint","Daily Hint - Zone","50",
						"dc_hint","Daily Hint - Continent","20",
						"mz_hint","Monthly Hint - Zone","50",
						"mc_hint","Monthly Hint - Continent","20"});
dilcopy shopbuy@bounty({"full_restore","Potion of Full Restoration","100",
						"strong_restore","Potent Potion of Restoration","75",
						"half_restore","Potion of Restoration","50",
						"full_mana","Potion of Full Mana","40",
						"strong_mana","Potent Potion of Mana","30",
						"half_mana","Potion of Mana","20",
						"full_end","Potion of Full Endurance","40",
						"strong_end","Potent Potion of Endurance","30",
						"half_end","Potion of Endurance","20",
						"full_heal","Potion of Full Healing","40",
						"strong_heal","Potent Potion of Healing","30",
						"half_heal","Potion of Healing","20",
						"mulligan","Contract Breaking Note","100",
						"dz_hint","Daily Hint - Zone","50",
						"dc_hint","Daily Hint - Continent","20",
						"mz_hint","Monthly Hint - Zone","50",
						"mc_hint","Monthly Hint - Continent","20"});

end 

guide
names {"hunters guide","guide","woman"}    
title "the hunters guide"        
descr "A dark-cloaked woman is here, in the shadows."
extra{}
"Not much can be seen of the woman under the dark cloak. A strength can be felt 
as you gaze upon her. It would be wise to choose your words carefully." 

alignment -1000
M_AVG_ELF(100,SEX_FEMALE)
position POSITION_STANDING 

dilcopy expel();
dilcopy guide();

end 

historian
names {"the historian","historian","centaur"}    
title "The Historian"        
descr "An aged centaur stands here with a look of knowing."
extra{}
"Tall and powerful despite clearly showing the signs of significant age, 
The Historian is a somewhat mysterious creature. Not much is known 
about him, except that he has served the Hunters Guild longer than any
other living beings." 

alignment 0
M_UNICORN_XLARGE(100,SEX_MALE)
position POSITION_STANDING 

end 

blacksmith
names {"the blacksmith","blacksmith","groll"}    
title "The Blacksmith"        
descr "A strong groll blacksmith stands at the forge."
extra{}
"The Blacksmith is a central figure in the Bounty Hunters guild. 
With every swing of his hammer, he brings glory and strength to the 
members. He works to craft the unique weapons, and armors which 
serve the Hunters." 

alignment 0
M_UNICORN_XLARGE(100,SEX_MALE)
position POSITION_STANDING 

dilcopy new_spree@bounty();

end 

jeweler
names {"the jeweler","jeweler","half-elf"}    
title "The Jeweler"        
descr "A half-elven jeweler is here working her craft."
extra{}
"The Bounty Hunters have relied on the finely-wrought jewelery 
produced by The Jeweler to both reward their members, and support 
the payments which work to lubricate hands and minds in favor 
of their work." 

alignment 0
M_UNICORN_XLARGE(100,SEX_MALE)
position POSITION_STANDING 

end 

%objects

contract
names {"contract"}
title "a contract"
descr "A crisp paper is here."
extra {}
"<div class='cr'>REWARD!!</div><br>"
manipulate {MANIPULATE_TAKE}
weight 1
cost 1 IRON_PIECE
end

tablet
names {"bounty hunters tablet","btyhntrtblt","tablet"}
title "the bounty hunters tablet"
descr "A strange stone tablet lies here."
extra {}
""
manipulate {MANIPULATE_TAKE}
weight 1
cost 1 IRON_PIECE

dilcopy tablet@bounty();

end

// longest streaks
assn_plaque
names {"top assassin plaque","top assassin","plaque","1"}
title "the top assassins plaque"
descr "A <a cmd='read #'>top assassin plaque</a> is here."
weight 1
cost 1 IRON_PIECE
extra {}
""
end
//  longest active monthly streak
mnth_sign
names {"monthly assassin sign","monthly assassin","sign","2"}
title "the monthly assassins sign"
descr "An active <a cmd='read #'>monthly assassin sign</a> is here."
weight 1
cost 1 IRON_PIECE
extra {}
""
end
// longest active daily streak
day_sign
names {"daily assassin sign","daily assassin","sign","3"}
title "the daily assassins sign"
descr "An active <a cmd='read #'>daily assassin sign</a> is here."
weight 1
cost 1 IRON_PIECE
extra {}
""
end

//most total dailies
tday_board
names {"total daily assassin board","total assassin","board","4"}
title "the total daily assassins board"
descr "A <a cmd='read #'>total assassin board</a> is here."
weight 1
cost 1 IRON_PIECE
extra {}
""
end
// most total monthlies
tmonth_board
names {"total monthly assassin board","total monthly","board"}
title "the total monthly assassins board"
descr "A <a cmd='read #'>total monthly board</a> is here."
weight 1
cost 1 IRON_PIECE
extra {}
""
end

bty_sign
names {"bounty sign","sign","instructions"}
title "some instructions"
descr "Some helpful <a cmd='read #'>instructions</a> are here."
extra {}
"Say 'contract' to hear the contract options available.<br><br>
Say 'contract status' to hear the status of any existing contracts, 
and for the option to receive a new contract card."
weight 1
cost 1 IRON_PIECE
extra {}
""
end


//////////////////////////////////////////////////////////////////
//          special rewards and items for bounties.             //
//////////////////////////////////////////////////////////////////

full_restore
names {"potion of full restoration","full restoration","potion"}
title "a potion of full restoration"
descr "A potion of full restoration is here."
extra {}
"A clear glass vial contains a glowing multi-colored substance. It 
appears to be a highly potent potion of restoration."
manipulate {MANIPULATE_TAKE,MANIPULATE_HOLD}
weight 1
cost 1 IRON_PIECE
type ITEM_POTION

dilcopy restore_pot@bounty("restore","full");

end

strong_restore
names {"potent potion of restoration","potent restoration","potion"}
title "a potent potion of restoration"
descr "A potent potion of restoration is here."
extra {}
"A clear glass vial contains a glowing multi-colored substance. It 
appears to be a potent potion of restoration."
manipulate {MANIPULATE_TAKE,MANIPULATE_HOLD}
weight 1
cost 1 IRON_PIECE
type ITEM_POTION

dilcopy restore_pot@bounty("restore","strong");

end

half_restore
names {"potion of restoration","restoration","potion"}
title "a potion of restoration"
descr "A potion of restoration is here."
extra {}
"A clear glass vial contains a glowing multi-colored substance. It 
appears to be a potion of restoration."
manipulate {MANIPULATE_TAKE,MANIPULATE_HOLD}
weight 1
cost 1 IRON_PIECE
type ITEM_POTION

dilcopy restore_pot@bounty("restore","half");

end

full_heal
names {"potion of full healing","full healing","potion"}
title "a potion of full healing"
descr "A potion of full healing is here."
extra {}
"A clear glass vial contains a glowing red substance. It appears 
to be a highly potent potion of healing."
manipulate {MANIPULATE_TAKE,MANIPULATE_HOLD}
weight 1
cost 1 IRON_PIECE
type ITEM_POTION

dilcopy restore_pot@bounty("hp","full");

end

strong_heal
names {"potent potion of healing","potent healing","potion"}
title "a potent potion of healing"
descr "A potent potion of healing is here."
extra {}
"A clear glass vial contains a glowing red substance. It appears 
to be a potent potion of healing."
manipulate {MANIPULATE_TAKE,MANIPULATE_HOLD}
weight 1
cost 1 IRON_PIECE
type ITEM_POTION

dilcopy restore_pot@bounty("hp","strong");

end

half_heal
names {"potion of healing","healing","potion"}
title "a potion of healing"
descr "A potion of healing is here."
extra {}
"A clear glass vial contains a glowing red substance. It appears 
to be a potion of healing."
manipulate {MANIPULATE_TAKE,MANIPULATE_HOLD}
weight 1
cost 1 IRON_PIECE
type ITEM_POTION

dilcopy restore_pot@bounty("hp","half");

end

full_end
names {"potion of full endurance","full endurance","potion"}
title "a potion of full endurance"
descr "A potion of full endurance is here."
extra {}
"A clear glass vial contains a glowing green substance. It appears 
to be a highly potent potion of endurance."
manipulate {MANIPULATE_TAKE,MANIPULATE_HOLD}
weight 1
cost 1 IRON_PIECE
type ITEM_POTION

dilcopy restore_pot@bounty("endurance","full");

end

strong_end
names {"potent potion of endurance","potent endurance","potion"}
title "a potent potion of endurance"
descr "A potent potion of endurance is here."
extra {}
"A clear glass vial contains a glowing green substance. It appears 
to be a potent potion of endurance."
manipulate {MANIPULATE_TAKE,MANIPULATE_HOLD}
weight 1
cost 1 IRON_PIECE
type ITEM_POTION

dilcopy restore_pot@bounty("endurance","strong");

end

half_end
names {"potion of endurance","endurance","potion"}
title "a potion of endurance"
descr "A potion of endurance is here."
extra {}
"A clear glass vial contains a glowing green substance. It appears 
to be a potion of endurance."
manipulate {MANIPULATE_TAKE,MANIPULATE_HOLD}
weight 1
cost 1 IRON_PIECE
type ITEM_POTION

dilcopy restore_pot@bounty("endurance","half");

end

full_mana
names {"potion of full mana","full mana","potion"}
title "a potion of full mana"
descr "A potion of full mana is here."
extra {}
"A clear glass vial contains a glowing blue substance. It appears 
to be a highly potent potion of mana."
manipulate {MANIPULATE_TAKE,MANIPULATE_HOLD}
weight 1
cost 1 IRON_PIECE
type ITEM_POTION

dilcopy restore_pot@bounty("mana","full");

end

strong_mana
names {"potent potion of mana","potent mana","potion"}
title "a potent potion of mana"
descr "A potent potion of mana is here."
extra {}
"A clear glass vial contains a glowing blue substance. It appears 
to be a potent potion of mana."
manipulate {MANIPULATE_TAKE,MANIPULATE_HOLD}
weight 1
cost 1 IRON_PIECE
type ITEM_POTION

dilcopy restore_pot@bounty("mana","strong");

end

half_mana
names {"potion of mana","mana","potion"}
title "a potion of mana"
descr "A potion of mana is here."
extra {}
"A clear glass vial contains a glowing blue substance. It appears 
to be a potion of mana."
manipulate {MANIPULATE_TAKE,MANIPULATE_HOLD}
weight 1
cost 1 IRON_PIECE
type ITEM_POTION

dilcopy restore_pot@bounty("mana","half");

end


mulligan
names {"contract breaker","note","mulligan"}
title "a contract breaking note"
descr "A contract breaking note is here."
extra {}
"This note, when given to the bounty hunter, allows you to break from a single contract."
manipulate {MANIPULATE_TAKE}
weight 1
cost 1 IRON_PIECE
end

mc_hint
names {"monthly continent hint","hint"}
title "a monthly continent hint"
descr "A monthly continent hint is here."
extra {}
"<div class='cpc'>HINT!!</div><br>"
manipulate {MANIPULATE_TAKE}
dilcopy hint@bounty("m","c");
weight 1
cost 1 IRON_PIECE
end

mz_hint
names {"monthly zone hint","hint"}
title "a monthly zone hint"
descr "A monthly zone hint is here."
extra {}
"<div class='coc'>HINT!!</div><br>"
manipulate {MANIPULATE_TAKE}
dilcopy hint@bounty("m","z");
weight 1
cost 1 IRON_PIECE
end

dc_hint
names {"daily continent hint","hint"}
title "a daily continent hint"
descr "A daily continent hint is here."
extra {}
"<div class='cpc'>HINT!!</div><br>"
manipulate {MANIPULATE_TAKE}
dilcopy hint@bounty("d","c");
weight 1
cost 1 IRON_PIECE
end

dz_hint
names {"daily zone hint","hint"}
title "a daily zone hint"
descr "A daily zone hint is here."
extra {}
"<div class='coc'>HINT!!</div><br>"
manipulate {MANIPULATE_TAKE}
dilcopy hint@bounty("d","z");
weight 1
cost 1 IRON_PIECE
end

%reset
load hunter into contracts max 1
load shopkeep into shop max 1
load bty_sign into contracts max 1

%end
